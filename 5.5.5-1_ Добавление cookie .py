# https://stepik.org/lesson/715854/step/5?unit=716645

# Добавление cookie
# webdriver.add_cookie(cookie_dict)
# Все мы когда-то чистили браузер от печенек(cookies). Наверное, каждый начинающий программист знает, что если очистить
# cookie, то настройки сайта слетят, слетит учетная запись, темная тема перестанет загружаться по умолчанию, сайт вдруг
# перестанет приветствовать вас по имени. Всем понятно, зачем чистить куки, а вот зачем их добавлять в браузер?
# Добавляем мы их по обратной причине. Когда мы работаем с Selenium, мы не всегда можем использовать один профиль
# браузера в нескольких скриптах. В таких случаях мы можем либо создать еще несколько профилей, либо использовать одни
# cookie на все скрипты.
#
# .add_cookie(cookie_dict) - это метод, который добавляет cookie в ваш браузер. Принимает словарь, но с определенными
# ограничениями, мы не можем передать в cookie что попало.  В браузере есть заранее подготовленные поля, в которые мы
# можем передавать данные.
#
# Посмотреть их можно в любом браузере. Эти поля доступны для передачи их в словаре,
# как формировать словарь мы поговорим ниже.
#
# "name" - устанавливает имя cookie-файла;
# "value" - устанавливает значение cookie, это значение может либо идентифицировать пользователя, либо содержать любую
# другую служебную информацию;
# "expiry" и "max-age" - определяет срок жизни cookie, после истечении этого срока cookie будет удален из памяти
# браузера. Если не указывать эти значения, содержимое cookie будет удалено после закрытия браузера
# (измеряется в секундах);
# "path" - указывает путь к директории на сервере, для которой будут доступны cookie. Чтобы cookie были доступны по
# всему домену, необходимо указать / ;
# "domain" - хранит в себе информацию о домене или поддомене, которые имеют доступ к этому cookie. Если необходимо,
# чтобы cookie были доступны по всему домену и всем поддоменам, указывается базовый домен, к примеру www.example.ru;
# "secure" - указывает серверу, что cookie должны передаваться только по защищенному https-соединению;
# "httponly"- параметр запрещает доступ к cookie посредством API браузера document.cookie. Предотвращает кражи cookie
# посредством XSS-атак. Если флаг установлен True, вы сможете получить доступ к этому cookie только через браузер,
# в том числе и через Selenium;
# "samesite" - ограничивает передачу cookie между сайтами, предотвращает кражу cookie посредством XSS-атак.
# Имеет три состояния:
# samesite=none - на передачу cookie нет никаких ограничений;
# samesite=lax - разрешает передачу только безопасным HTTPS методом;
# samesite=strict или samesite - самое строгое состояние, которое запрещает отправку cookie на другие сайты.
# Запустите код ниже у себя в терминале, поиграйтесь с параметрами,  посмотрите на результат,
# найдите изменения в браузере.
import time
from pprint import pprint
from selenium import webdriver

cookie_dict = {
    'name': '1any_name_cookie',    # Любое имя для cookie
    'value': '2any_value_cookie',  # Любое значение для cookie
    'expiry': 2_000_000_000,      # Время жизни cookie в секундах
    'path': '/',                  # Директория на сервере для которой будут доступны cookie
    'domain': 'parsinger.ru',     # Информация о домене и поддомене для которых доступны cookie
    'secure': True,  # or False   # Сигнал браузера о том что передать cookie только по защищённому HTTPS
    'httpOnly': True,  # or False # Ограничивает доступ к cookie по средствам API
    'sameSite': 'Strict',  # or lax or none # Ограничение на передачу cookie между сайтами
}

with webdriver.Chrome() as webdriver:
    webdriver.get('https://parsinger.ru/methods/4/index.html')
    webdriver.add_cookie(cookie_dict)
    pprint(webdriver.get_cookies())
    time.sleep(100)
# Все ключи словаря cookie_dict соответствуют полям cookie в браузере, поэтому вы не можете менять ключи в этом словаре.
# Если вы это сделаете, словарь просто не запишется в cookie браузера. Вы можете изменять только значения этого словаря,
# и только следуя определенным правилам, написать все что угодно можно только в значениях ключей  "name" и "value"
